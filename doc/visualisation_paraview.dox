/*! \page "Visualisation with Paraview"

\see "VTKWriter Component" for implementation details.

!!! Building ls1/Mardyn with the VTK Writer

!!Prerequisite
If you are using Ubuntu, install the following packages.
- libxerces-c2-dev
- libxerces-c28

!! Using the Makefile

To build ls1 with VTK support, you have to specify "VTK=1" for the makefile:
\verbatim
make -f ../makefile/Makefile VTK=1
\endverbatim

!! Using something else

You have to
- define the macro VTK (-DVTK)
- add the libxsd to the include path (option -I)
- link the object files against the Xerces-C library (-lxerces-c)

!!! Generating VTK output

! For molecule data

Add the line
\verbatim
output VTKWriter n filename
\endverbatim
to the config file, where n is an integer number. It means that every n-th
timestep an output file is generated. Replace filename with the name or path
for the output. It serves as base for name of the output file generated.

If ls1 is running sequentially, for every n-th timestep exactly one output file
will be generated (file ending .vtu). Running ls1 in parallel will result in one
file per MPI-process per timestep being written. Additionally, the root node will
create one meta-file (ending .pvtu) referencing the data files of the single processes.

! For the linked cell data structure

Add the line
\verbatim
output VTKGridWriter n filename
\endverbatim
to the config file. Be sure that "filename" is different from the filename you specified for
the VTKWriter (in case you use both), otherwise both writers will try to generate output files
with the same name.

Concerning everythin else the section above applies, too.

!!! Visualising the output

I assume you have Paraview (available from www.paraview.org) installed on your system.
Start it.

! Molecule data

- choose "File->open..."
- navigate to the directory where the files are located
- choose a *.pvtu file, if the experiment ran in parallel, otherwise choose a *.vtu
file. Paraview will consider files of the same base name but ending with an underscore and
a number (e.g. "_1.vtu", "_2.vtu", ...) as a sequence of output files of the same experiment.
- klick apply (you won't see anything yet)
- choose "Filters->Common->Glyph" from the menu,
- choose "Sphere" as "Glyph Type" from the menu in the lower left and klick apply.
- Now there's plenty of options to format the glyphs. Have fun! ;)

! LinkedCells Grid

- choose "File->open..."
- navigate to the directory where the files are located
- choose a *.pvtu file, if the experiment ran in parallel, otherwise choose a *.vtu
file. Paraview will consider files of the same base name but ending with an underscore and
a number (e.g. "_1.vtu", "_2.vtu", ...) as a sequence of output files of the same experiment.

- You already should see the 3d grid. Create a view you like.
*/